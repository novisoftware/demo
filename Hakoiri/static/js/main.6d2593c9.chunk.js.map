{"version":3,"sources":["components/PuzzlePiece.tsx","components/Board.tsx","defs/boards/HakoiriBigFamily.tsx","defs/boards/Hakoiri.tsx","defs/boards/Shogi.tsx","defs/boards/Kayoudou.tsx","components/Header.tsx","App.tsx","index.tsx"],"names":["PuzzlePiece","_ref","position","size","label","isActive","onDragStart","onClick","onTouchStart","onTouchMove","onTouchEnd","isVertical","fontSize","width","height","length","_jsx","className","concat","style","gridColumn","x","gridRow","y","display","justifyContent","alignItems","writingMode","border","backgroundColor","color","cursor","draggable","children","Board","boardDef","useEffect","boardElement","document","querySelector","addEventListener","event","preventDefault","passive","removeEventListener","pieces","setPieces","useState","pieceData","hoverPosition","setHoverPosition","draggedPiece","setDraggedPiece","dragStartPosition","setDragStartPosition","touchStartPosition","setTouchStartPosition","handleTouchMove","touch","touches","deltaX","clientX","deltaY","clientY","newX","Math","floor","newY","correctedX","min","max","correctedY","handleTouchEnd","some","piece","id","prevPieces","map","_objectSpread","w1","h1","w2","h2","gridTemplateColumns","gridTemplateRows","_jsxs","margin","onDrop","droppedPiece","JSON","parse","dataTransfer","getData","targetX","targetY","isOverlap","isOutOfBounds","console","log","onDragOver","X","Y","relativeX","relativeY","rect","currentTarget","getBoundingClientRect","hoverX","hoverY","index","setData","stringify","startX","startY","handleTouchStart","borderRadius","bottom","left","transform","DEFINITION_HAKOIRI_BIG_FAMILY","DEFINITION_HAKOIRI","DEFINITION_SHOGI","DEFINITION_KAYOUDOU","Header","header","message","href","puzzleOptions","value","definition","App","selected","setSelected","current","find","opt","onChange","e","target","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6d2593c9.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PuzzlePieceProps {\n    position: { x: number; y: number };\n    size: { width: number; height: number };\n    label: string;\n    isActive: boolean;\n    onDragStart: (event: React.DragEvent<HTMLDivElement>) => void;\n    onClick: () => void;\n    onTouchStart: (event: React.TouchEvent<HTMLDivElement>) => void;\n    onTouchMove: (event: React.TouchEvent<HTMLDivElement>) => void;\n    onTouchEnd: (event: React.TouchEvent<HTMLDivElement>) => void;\n}\n\n\nconst PuzzlePiece: React.FC<PuzzlePieceProps> = ({ position, size, label, isActive, onDragStart, onClick,\n    onTouchStart, onTouchMove, onTouchEnd }) => {\n    let isVertical = false;\n    let fontSize = '1rem';\n    if (size.width === 1 && size.height === 1) {\n        if (label.length == 1) {\n            fontSize = '1.5rem'; // 1文字の場合は大きく\n            isVertical = false; // 1文字の場合は縦書きも横書きもない\n        }\n        else {\n            fontSize = '1.2rem'; // 2文字以上の場合は通常サイズ\n            isVertical = true; // 2文字以上の場合は横書き\n        }\n    } else {\n        if (size.height == size.width) {\n            fontSize = '5rem'; // 大きく\n        } else if (size.height > size.width) {\n            fontSize = '2em'; // 大きく\n            isVertical = true; // 縦長の場合は縦書き\n        }\n        else {\n            fontSize = '2rem'; // 大きく\n            isVertical = false; // 横長の場合は横書き\n        }\n    }\n\n    return (\n        <div\n            className={`puzzle-piece ${isActive ? 'active' : ''}`}\n            style={{\n                gridColumn: `${position.x} / span ${size.width}`,\n                gridRow: `${position.y} / span ${size.height}`,\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                writingMode: isVertical ? 'vertical-rl' : 'horizontal-tb',\n                border: '1.5px solid black',\n                backgroundColor: '#f0f0f0',\n                color: '#000', // 文字色を黒に変更\n                fontSize: fontSize, // 文字サイズを調整\n                cursor: 'grab',\n                width: '100%', // グリッド内で幅を100%に設定\n                height: '100%', // グリッド内で高さを100%に設定\n            }}\n            draggable=\"true\"\n            onDragStart={onDragStart}\n            onClick={onClick}\n            onTouchStart={onTouchStart}\n            onTouchMove={onTouchMove}\n            onTouchEnd={onTouchEnd}\n        >\n            {label}\n        </div>\n    );\n};\n\nexport default PuzzlePiece;","import React, { useEffect, useState } from 'react';\nimport PuzzlePiece from './PuzzlePiece';\nimport { BoardDefinition, PieceData, Position } from '../defs/BoardDefinition';\n\n// props追加\ninterface BoardProps {\n    boardDef: BoardDefinition;\n}\n\nconst Board: React.FC<BoardProps> = ({ boardDef }) => {\n    useEffect(() => {\n        const boardElement = document.querySelector('.board');\n        if (boardElement) {\n            boardElement.addEventListener('touchmove', (event) => event.preventDefault(), { passive: false });\n        }\n        return () => {\n            if (boardElement) {\n                boardElement.removeEventListener('touchmove', (event) => event.preventDefault());\n            }\n        };\n    }, []);\n\n    const [pieces, setPieces] = useState<PieceData[]>(boardDef.pieceData); // ピースの初期データを設定\n    // boardDefが変わったらpiecesをリセット\n    useEffect(() => {\n        setPieces(boardDef.pieceData);\n    }, [boardDef]);\n\n    const [hoverPosition, setHoverPosition] = useState<Position | null>(null);\n    const [draggedPiece, setDraggedPiece] = useState<PieceData | null>(null); // ドラッグ中のピースを保存\n    const [dragStartPosition, setDragStartPosition] = useState<Position | null>(null); // ドラッグ開始位置を保存\n    const [touchStartPosition, setTouchStartPosition] = useState<Position | null>(null);\n\n    const handleTouchStart = (event: React.TouchEvent<HTMLDivElement>, piece: PieceData) => {\n        event.preventDefault();\n        const touch = event.touches[0];\n        setDraggedPiece(piece);\n        setTouchStartPosition({ x: touch.clientX, y: touch.clientY });\n    };\n\n    const handleTouchMove = (event: React.TouchEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        if (!draggedPiece || !touchStartPosition) return;\n\n        const touch = event.touches[0];\n        const deltaX = touch.clientX - touchStartPosition.x;\n        const deltaY = touch.clientY - touchStartPosition.y;\n\n        const newX = Math.floor(draggedPiece.position.x + deltaX / (600 / boardDef.width));\n        const newY = Math.floor(draggedPiece.position.y + deltaY / (500 / boardDef.height));\n\n        // 枠外に出ないよう補正\n        const correctedX = Math.min(Math.max(newX, 1), boardDef.width - draggedPiece.size.width + 1);\n        const correctedY = Math.min(Math.max(newY, 1), boardDef.height - draggedPiece.size.height + 1);\n\n        setHoverPosition({ x: correctedX, y: correctedY });\n\n        // setDraggedPiece({ ...draggedPiece, position: { x: correctedX, y: correctedY } });\n    };\n\n    const handleTouchEnd = (event: React.TouchEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        if (!draggedPiece || !hoverPosition) return;\n\n        // 他のピースと重なるか確認\n        const isOverlap = pieces.some((piece) => {\n            return (\n                piece.id !== draggedPiece.id && // ドロップされたピース自身は除外\n                hoverPosition.x < piece.position.x + piece.size.width &&\n                hoverPosition.x + draggedPiece.size.width > piece.position.x &&\n                hoverPosition.y < piece.position.y + piece.size.height &&\n                hoverPosition.y + draggedPiece.size.height > piece.position.y\n            );\n        });\n\n        if (!isOverlap) {\n            setPieces((prevPieces) =>\n                prevPieces.map((piece) =>\n                    piece.id === draggedPiece.id ? { ...draggedPiece, position: { x: hoverPosition.x, y: hoverPosition.y } } : piece\n                )\n            );\n        }\n        setDraggedPiece(null);\n        setTouchStartPosition(null);\n    };\n\n\n    const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        if (!draggedPiece) return; // ドラッグ中のピースが存在しない場合は処理を中断\n        if (!dragStartPosition) return; // ドラッグ開始位置が未設定の場合は処理を中断\n        // ドラッグ開始位置を基準に相対的な位置を計算\n        const X = event.clientX; // X座標\n        const Y = event.clientY; // Y座標\n        const relativeX = X - dragStartPosition.x; // ドラッグ操作での相対的なX座標\n        const relativeY = Y - dragStartPosition.y; // ドラッグ操作での相対的なY座標\n\n        // ドラッグ中のピースの位置を基準にホバー位置を計算\n        // グリッドの位置を計算\n        const rect = event.currentTarget.getBoundingClientRect();\n        let hoverX = Math.floor(relativeX / (1.0 * rect.width / boardDef.width) + 0.5) + draggedPiece.position.x; // グリッドの列を計算\n        let hoverY = Math.floor(relativeY / (1.0 * rect.height / boardDef.height) + 0.5) + draggedPiece.position.y; // グリッドの行を計算\n\n        // ドロップ位置を補正\n        hoverX = Math.max(hoverX, 1); // 最小値を1に設定\n        hoverY = Math.max(hoverY, 1); // 最小値を1に設定\n        hoverX = Math.min(Math.max(hoverX, 1), boardDef.width - draggedPiece.size.width + 1);\n        hoverY = Math.min(Math.max(hoverY, 1), boardDef.height - draggedPiece.size.height + 1);\n\n        setHoverPosition({ x: hoverX, y: hoverY });\n    };\n\n    const handleDrop = (event: React.DragEvent<HTMLDivElement>) => {\n        event.preventDefault();\n        const droppedPiece = JSON.parse(event.dataTransfer.getData('text/plain')); // as PieceData;\n        const targetX = hoverPosition?.x || 1;\n        const targetY = hoverPosition?.y || 1;\n\n        // 他のピースと重なるか確認\n        const isOverlap = pieces.some((piece) => {\n            return (\n                piece.id !== droppedPiece.id && // ドロップされたピース自身は除外\n                targetX < piece.position.x + piece.size.width &&\n                targetX + droppedPiece.size.width > piece.position.x &&\n                targetY < piece.position.y + piece.size.height &&\n                targetY + droppedPiece.size.height > piece.position.y\n            );\n        });\n\n        // 枠の外に出ないか確認\n        const isOutOfBounds = targetX < 1 || targetY < 1 || targetX + droppedPiece.size.width > boardDef.width + 1 || targetY + droppedPiece.size.height > boardDef.height + 1;\n\n        if (!isOverlap && !isOutOfBounds) {\n            setPieces((prevPieces) =>\n                prevPieces.map((piece) =>\n                    piece.id === droppedPiece.id\n                        ? { ...piece, position: { x: targetX, y: targetY } }\n                        : piece\n                )\n            );\n        } else {\n            console.log(\"重なりが発生しました。ドラッグをキャンセルします。\");\n        }\n\n        setHoverPosition(null); // ドロップ後にホバー位置をリセット\n        setDraggedPiece(null); // ドロップ後にドラッグ中のピースをリセット\n    };\n\n    const w1: string = `${boardDef.width * 100 + 10}px`; // ボードの幅 + 枠の幅\n    const h1: string = `${boardDef.height * 100 + 40}px`; // ボードの高さ + 枠の幅\n\n\n    const w2: string = `${boardDef.width * 100}px`; // ボードの幅\n    const h2: string = `${boardDef.height * 100}px`; // ボードの高さ\n\n    const gridTemplateColumns = `repeat(${boardDef.width}, 1fr)`;\n    const gridTemplateRows = `repeat(${boardDef.height}, 1fr)`;\n\n    return (\n        <div\n            style={{\n                position: 'relative',\n                width: `${w1}`, // ボードの幅 + 枠の幅\n                height: `${h1}`, // ボードの高さ + 枠の幅\n                border: '10px solid black', // 枠を追加\n                backgroundColor: '#fff',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n            }}\n        >\n            <div\n                className=\"board\"\n\n                style={{\n                    display: 'grid',\n                    gridTemplateColumns: `${gridTemplateColumns}`,\n                    gridTemplateRows: `${gridTemplateRows}`,\n                    width: `${w2}`, // ボードの幅\n                    height: `${h2}`, // ボードの高さ\n                    position: 'relative',\n                    backgroundColor: '#fff0',\n                    margin: '5px', // 枠の幅を考慮してマージンを追加\n                }}\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n            >\n                {pieces.map((piece, index) => (\n                    <PuzzlePiece\n                        key={index}\n                        label={piece.label}\n                        size={piece.size}\n                        position={piece.position}\n                        isActive={false}\n                        onClick={() => console.log(`${piece.label} clicked`)}\n                        onDragStart={(event) => {\n                            event.dataTransfer.setData('text/plain', JSON.stringify(piece));\n                            setDraggedPiece(piece); // ドラッグ中のピースを保存\n\n                            const startX = event.clientX; // 操作開始時のX座標\n                            const startY = event.clientY; // 操作開始時のY座標\n                            console.log(`Drag started at X: ${startX}, Y: ${startY}`); // ログ出力\n                            setDragStartPosition({ x: startX, y: startY }); // ドラッグ開始位置を保存\n                        }}\n                        onTouchStart={(event) => handleTouchStart(event, piece)}\n                        onTouchMove={handleTouchMove}\n                        onTouchEnd={handleTouchEnd}\n                    />\n                ))}\n                {hoverPosition && draggedPiece && (\n                    <div\n                        style={{\n                            gridColumn: `${hoverPosition.x} / span ${draggedPiece.size.width}`,\n                            gridRow: `${hoverPosition.y} / span ${draggedPiece.size.height}`,\n                            backgroundColor: 'rgba(128, 128, 255, 0.1)',\n                            border: '1px solid rgba(128, 128, 255, 0.5)',\n                            borderRadius: '7px',\n                            position: 'absolute',\n                            width: '100%',\n                            height: '100%',\n                        }}\n                    />\n                )}\n            </div>\n            {/* 下辺中央の出口を表現する切れ目 */}\n            <div\n                style={{\n                    position: 'absolute',\n                    bottom: '-10px',\n                    left: '50%',\n                    transform: 'translateX(-50%)',\n                    width: '200px', // 2マス分の幅\n                    height: '10px', // 枠の高さ\n                    backgroundColor: '#fff', // 枠の切れ目を白で表現\n                }}\n            />\n        </div>\n    );\n};\n\nexport default Board;\n","import { BoardDefinition } from '../BoardDefinition';\r\n\r\n// 箱入り娘(大家族)\r\nconst DEFINITION_HAKOIRI_BIG_FAMILY: BoardDefinition = {\r\n    width: 6, // グリッドの列数\r\n    height: 5, // グリッドの行数\r\n    pieceData: [\r\n        { id: 1, label: \"父\", size: { width: 1, height: 2 }, position: { x: 3, y: 1 } },\r\n        { id: 2, label: \"娘\", size: { width: 2, height: 2 }, position: { x: 4, y: 1 } },\r\n        { id: 3, label: \"母\", size: { width: 1, height: 2 }, position: { x: 6, y: 1 } },\r\n        { id: 4, label: \"丁稚\", size: { width: 1, height: 1 }, position: { x: 1, y: 3 } },\r\n        { id: 5, label: \"手代\", size: { width: 1, height: 1 }, position: { x: 2, y: 3 } },\r\n        { id: 6, label: \"大番頭\", size: { width: 4, height: 1 }, position: { x: 3, y: 3 } },\r\n        { id: 7, label: \"丁稚\", size: { width: 1, height: 1 }, position: { x: 1, y: 4 } },\r\n        { id: 8, label: \"番頭\", size: { width: 2, height: 1 }, position: { x: 2, y: 4 } },\r\n        { id: 9, label: \"女中\", size: { width: 2, height: 1 }, position: { x: 4, y: 4 } },\r\n        { id: 10, label: \"兄嫁\", size: { width: 1, height: 1 }, position: { x: 6, y: 4 } },\r\n        { id: 11, label: \"番犬\", size: { width: 1, height: 1 }, position: { x: 1, y: 5 } },\r\n        { id: 12, label: \"祖父\", size: { width: 2, height: 1 }, position: { x: 2, y: 5 } },\r\n        { id: 13, label: \"祖母\", size: { width: 2, height: 1 }, position: { x: 4, y: 5 } },\r\n        { id: 14, label: \"丁稚\", size: { width: 1, height: 1 }, position: { x: 6, y: 5 } },\r\n    ]\r\n}\r\n\r\nexport default DEFINITION_HAKOIRI_BIG_FAMILY;","import { BoardDefinition } from '../BoardDefinition';\r\n\r\n// 箱入り娘\r\nconst DEFINITION_HAKOIRI: BoardDefinition = {\r\n    width: 4, // グリッドの列数\r\n    height: 5, // グリッドの行数\r\n    pieceData: [\r\n        { id: 1, label: \"父親\", size: { width: 1, height: 2 }, position: { x: 1, y: 1 } },\r\n        { id: 2, label: \"娘\", size: { width: 2, height: 2 }, position: { x: 2, y: 1 } },\r\n        { id: 3, label: \"母親\", size: { width: 1, height: 2 }, position: { x: 4, y: 1 } },\r\n        { id: 4, label: \"祖父\", size: { width: 1, height: 2 }, position: { x: 1, y: 3 } },\r\n        { id: 5, label: \"兄弟\", size: { width: 2, height: 1 }, position: { x: 2, y: 3 } },\r\n        { id: 6, label: \"祖母\", size: { width: 1, height: 2 }, position: { x: 4, y: 3 } },\r\n        { id: 7, label: \"華道\", size: { width: 1, height: 1 }, position: { x: 2, y: 4 } },\r\n        { id: 8, label: \"茶道\", size: { width: 1, height: 1 }, position: { x: 3, y: 4 } },\r\n        { id: 9, label: \"和裁\", size: { width: 1, height: 1 }, position: { x: 1, y: 5 } },\r\n        { id: 10, label: \"書道\", size: { width: 1, height: 1 }, position: { x: 4, y: 5 } },\r\n    ]\r\n}\r\n\r\nexport default DEFINITION_HAKOIRI;","import { BoardDefinition } from '../BoardDefinition';\r\n\r\n// 将棋パズル\r\nconst DEFINITION_SHOGI: BoardDefinition = {\r\n    width: 4, // グリッドの列数\r\n    height: 5, // グリッドの行数\r\n    pieceData: [\r\n        { id: 1, label: \"角行\", size: { width: 1, height: 2 }, position: { x: 1, y: 1 } },\r\n        { id: 2, label: \"王\", size: { width: 2, height: 2 }, position: { x: 2, y: 1 } },\r\n        { id: 3, label: \"飛車\", size: { width: 1, height: 2 }, position: { x: 4, y: 1 } },\r\n        { id: 4, label: \"香車\", size: { width: 1, height: 1 }, position: { x: 1, y: 3 } },\r\n        { id: 5, label: \"桂馬\", size: { width: 1, height: 1 }, position: { x: 2, y: 3 } },\r\n        { id: 6, label: \"桂馬\", size: { width: 1, height: 1 }, position: { x: 3, y: 3 } },\r\n        { id: 7, label: \"香車\", size: { width: 1, height: 1 }, position: { x: 4, y: 3 } },\r\n        { id: 8, label: \"金\", size: { width: 2, height: 1 }, position: { x: 1, y: 4 } },\r\n        { id: 9, label: \"銀\", size: { width: 2, height: 1 }, position: { x: 3, y: 4 } },\r\n        { id: 10, label: \"歩兵\", size: { width: 1, height: 1 }, position: { x: 1, y: 5 } },\r\n        { id: 11, label: \"歩兵\", size: { width: 1, height: 1 }, position: { x: 4, y: 5 } },\r\n    ]\r\n}\r\n\r\nexport default DEFINITION_SHOGI;\r\n","import { BoardDefinition } from '../BoardDefinition';\r\n\r\n// 華容道\r\nconst DEFINITION_KAYOUDOU: BoardDefinition = {\r\n    width: 4, // グリッドの列数\r\n    height: 5, // グリッドの行数\r\n    pieceData: [\r\n        { id: 1, label: \"黄忠\", size: { width: 1, height: 2 }, position: { x: 1, y: 1 } },\r\n        { id: 2, label: \"曹操\", size: { width: 2, height: 2 }, position: { x: 2, y: 1 } },\r\n        { id: 3, label: \"張飛\", size: { width: 1, height: 2 }, position: { x: 4, y: 1 } },\r\n        { id: 4, label: \"兵\", size: { width: 1, height: 1 }, position: { x: 1, y: 3 } },\r\n        { id: 5, label: \"馬超\", size: { width: 1, height: 2 }, position: { x: 1, y: 4 } },\r\n        { id: 6, label: \"関羽\", size: { width: 2, height: 1 }, position: { x: 2, y: 3 } },\r\n        { id: 7, label: \"趙雲\", size: { width: 1, height: 2 }, position: { x: 4, y: 3 } },\r\n        { id: 9, label: \"兵\", size: { width: 1, height: 1 }, position: { x: 4, y: 5 } },\r\n        { id: 8, label: \"兵\", size: { width: 1, height: 1 }, position: { x: 2, y: 4 } },\r\n        { id: 9, label: \"兵\", size: { width: 1, height: 1 }, position: { x: 3, y: 4 } },\r\n    ]\r\n}\r\n\r\nexport default DEFINITION_KAYOUDOU;\r\n","import React from 'react';\n\ninterface HeaderProps {\n    header: string;\n    message: string;\n}\n\n\nconst Header: React.FC<HeaderProps> = ({header, message}) => {\n    return (\n        <header>\n            <h1>{header}</h1>\n            <p>{message}詳しくはWikipediaの<a href=\"https://ja.wikipedia.org/wiki/%E7%AE%B1%E5%85%A5%E3%82%8A%E5%A8%98_(%E3%83%91%E3%82%BA%E3%83%AB)\">箱入り娘</a>を見よう。</p>\n        </header>\n    );\n};\n\nexport default Header;","import React, { useState } from 'react';\nimport Board from './components/Board';\nimport DEFINITION_HAKOIRI_BIG_FAMILY from './defs/boards/HakoiriBigFamily';\nimport DEFINITION_HAKOIRI from './defs/boards/Hakoiri';\nimport DEFINITION_SHOGI from './defs/boards/Shogi';\nimport DEFINITION_KAYOUDOU from './defs/boards/Kayoudou';\nimport Header from './components/Header';\nimport './styles/App.css';\n\nconst puzzleOptions = [\n    { label: '箱入り娘(大家族)', value: 'big', definition: DEFINITION_HAKOIRI_BIG_FAMILY, header: '箱入り娘(大家族)', message: '大家族の箱入り娘を外に出そう。' },\n    { label: '箱入り娘', value: 'hakoiri', definition: DEFINITION_HAKOIRI, header: '箱入り娘', message: '箱入り娘を外に出そう。' },\n    { label: '将棋パズル', value: 'shogi', definition: DEFINITION_SHOGI, header: '将棋パズル', message: '王を出陣させよう。'},\n    { label: '華容道', value: 'kayou', definition: DEFINITION_KAYOUDOU, header: '華容道', message: '華容道を解こう。' },\n];\nconst App: React.FC = () => {\n    const [selected, setSelected] = useState('hakoiri'); // 初期値を箱入り娘に設定\n    const current = puzzleOptions.find(opt => opt.value === selected) || puzzleOptions[2];\n    return (\n        <div className=\"App\">\n            <Header header={current.header} message={current.message} />\n            <div style={{ margin: '16px 0' }}>\n                <label>\n                    パズルを選択：\n                    <select value={selected} onChange={e => setSelected(e.target.value)}>\n                        {puzzleOptions.map(opt => (\n                            <option key={opt.value} value={opt.value}>{opt.label}</option>\n                        ))}\n                    </select>\n                </label>\n            </div>\n            <Board boardDef={current.definition} />\n        </div>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}